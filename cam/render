#!/usr/bin/python

import errno    
import os
from io import BytesIO
from time import sleep

from gpiozero import Button
import picamera
import picamera.array
from picamera.array import np 

from PIL import Image
import sys


resolution = (1296, 972)

MODE_RED = 'r'
MODE_MONO = 'mono'
MODE_BOTH = 'both'

OUT_DIR = 'out'
SHUTTER_INPUT = 15

iso = None
mode = None
camera = None


def on_shutter_pressed():
	stream = BytesIO()
	
	print "Capturing..."
	camera.capture(stream, format='bmp')

	stream.seek(0)
	print "Building PIL Image..."
	source = Image.open(stream)

	render_file(source)
	upload()


def render_file(source):
	if mode == MODE_RED or mode == MODE_BOTH:
		print "Writing RED"
		r, g, b = source.split()
		r.save(OUT_DIR + '/r.png')

	if mode == MODE_MONO or mode == MODE_BOTH:
		print "Writing MONO"
		mono = source.convert('L')
		mono.save(OUT_DIR + '/mono.png')


def upload():
	print "Uploading output..."
	pass


def adjust_exposure():
	print "Adjusting exposure..."
	camera.iso = iso

	print "Waiting for auto gain to kick in..."
	# auto gain needed? check docs
	sleep(2)

	print "Analog gain: %d" % camera.analog_gain
	#camera.analog_gain = 4
	camera.shutter_speed = camera.exposure_speed
	#camera.shutter_speed = 1000000
	camera.exposure_mode = 'off'
	g = camera.awb_gains
	camera.awb_mode = 'off'
	camera.awb_gains = g

	
def ensure_output_dir_exists():
	print "Ensure output directory exists..."

	try:
		os.makedirs(OUT_DIR)
	except OSError as exc:
		if exc.errno == errno.EEXIST and os.path.isdir(OUT_DIR):
			pass
		else:
			raise


if __name__ == "__main__":
	if len(sys.argv) != 3:
		exit('Missing arguments: mode, iso')

	# TODO validate ISO
	iso = int(sys.argv[1])

	mode = sys.argv[2]
	if mode not in [MODE_RED, MODE_MONO, MODE_BOTH]:
		exit('Unsupported mode: %s' % mode)

	ensure_output_dir_exists()

	print "Initializing camera..."
	with picamera.PiCamera() as camera:
		camera.resolution = resolution
		adjust_exposure()

		shutter = Button(SHUTTER_INPUT)
		shutter.when_pressed = on_shutter_pressed
		print "Push it!"

		while True:
			sleep(0.5)
